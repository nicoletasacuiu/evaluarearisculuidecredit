library(randomForest)
rf_model <- randomForest(formula, data = train_data)
formula <- loan_status ~ person_age + person_income + person_home_ownership + person_emp_length + loan_intent + loan_grade + loan_amnt + loan_int_rate + loan_percent_income + cb_person_default_on_file + cb_person_cred_hist_length
rf_model <- randomForest(formula, data = train_data)
varImpPlot(rf_model)
predictions <- predict(rf_model, newdata = test_data)
predictions
print(rf_model)
library(pROC)
roc_obj <- roc(test_data$loan_status, predictions)
test_data$loan_status <- as.numeric(test_data$loan_status) - 1
roc_obj <- roc(test_data$loan_status, predictions)
predictions <- predict(rf_model, newdata = test_data)
roc_obj <- roc(test_data$loan_status, predictions)
predictions <- as.numeric(predictions)
test_data$loan_status <- as.numeric(test_data$loan_status)
roc_obj <- roc(test_data$loan_status, predictions)
test_data$loan_status <- relevel(test_data$loan_status, ref = "FALSE")
levels(test_data$loan_status) <- c("0", "1")
roc_obj <- roc(test_data$loan_status, predictions, levels = c("0", "1"))
auc <- auc(roc_obj)
print(auc)
